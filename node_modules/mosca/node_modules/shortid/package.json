{
  "name": "shortid",
  "version": "2.0.1",
  "description": "Amazingly short non-sequential url-friendly unique id generator.",
  "keywords": [
    "short",
    "tiny",
    "id",
    "uuid",
    "bitly",
    "shorten",
    "mongoid",
    "shortid",
    "tinyid"
  ],
  "homepage": "https://github.com/dylang/shortid",
  "author": {
    "name": "Dylan Greene",
    "email": "dylang@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dylang/shortid"
  },
  "dependencies": {},
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.20.1"
  },
  "main": "shortid.js",
  "engines": {
    "node": ">=0.8.x"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/dylang/shortid/master/LICENSE"
    }
  ],
  "readme": "# ShortId [![Build Status](https://secure.travis-ci.org/dylang/shortid.png)](http://travis-ci.org/dylang/shortid)\n\n[![NPM](https://nodei.co/npm/shortid.png?downloads=true)](https://nodei.co/npm/shortid/)\n\nShortId creates amazingly short non-sequential url-friendly unique ids.  Perfect for url shorteners, MongoDB and Reddis ids, and any other id users might see.\n\n * By default 7-14 url-friendly characters: `A-Z`, `a-z`, `0-9`, `_-`\n * Non-sequential so they are not predictable.\n * Supports `cluster` (automatically), custom seeds, custom alphabet.\n * Popular replacement for Mongo ID/Mongoose ID.\n * Includes [Mocha](http://visionmedia.github.com/mocha/) tests.\n\n- - -\n\n## Install\n\n```shell\n$ npm install shortid --save\n```\n\n`shortid` has no dependencies.\n\n- - -\n\n## Usage\n\n```js\nvar shortId = require('shortid');\n\nconsole.log(shortId.generate());\n\n//PPBqWA9\n```\n\nMongoose Unique Id\n```js\n_id: {\n    type: String,\n    unique: true,\n    'default': shortId.generate\n},\n```\n\n- - -\n\n## Example\n\n```js\n~/projects/shortid ❯ node examples/examples.js\neWRhpRV\n23TplPdS\n46Juzcyx\ndBvJIh-H\n2WEKaVNO\n7oet_d9Z\ndogPzIz8\nnYrnfYEv\na4vhAoFG\nhwX6aOr7\n```\n\n- - -\n\n## API\n\n### `generate()`\n\nReturns an amazingly short non-sequential unique id.\n\n__Alias:__ `shortId()`\n\n__Example__\n\n```js\nusers.insert({\n    _id: shortId.generate()\n    name: ...\n    email: ...\n    });\n```\n\n---------------------------------------\n\n### `seed(float)`\n\n__Default:__ `1`\n\n__Optional__\n\nChoose a unique value that will seed the random number generator so users won't be able to figure out the pattern of the unique ids. Call it just once in your application before using `shortId` and always use the same value in your application.\n\nMost developers won't need to use this. If you are worried about users decrypting the id then use it as a secret value to better encrypt the id.\n\n__Example__\n\n```js\nshortId.seed(1000);\n```\n\n---------------------------------------\n\n### `characters(string)`\n\n__Default:__ `'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_'`\n\n__Optional__\n\nChange the characters used.\n\nYou must provide a string of all 64 unique characters. Order is not important. \n\nThe default characters provided were selected because they are url safe.\n\n__Example__\n\n```js\n// use $ and @ instead of - an _\nshortId.alphabet('0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@');\n```\n\n```js\n// any 64 unicode charcters work\nshortId.alphabet('ⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩ①②③④⑤⑥⑦⑧⑨⑩⑪⑫');\n```\n\n- - -\n\n### Some projects using `shortId`\n\n`shortId` was created for Node Knockout 2011 winner for Most Fun [Doodle Or Die](http://doodleordie.com).\nMillions of doodles have been saved with `shortId` filenames. Every log message gets a `shortId` to make it easy\nfor us to look up later.\n\nHere are some other projects that use shortid:\n\n* [bevy](https://npmjs.org/package/bevy) - A simple server to manage multiple Node services.\n* [capre](https://npmjs.org/package/capre) - Cross-Server Data Replication.\n* [cordova-build](https://www.npmjs.org/package/cordova-build) - an alternative to phonegap build that runs on your servers/agents.\n* [couchdb-tools](https://www.npmjs.org/package/couchdb-tools) - A library of handy functions for use when working with CouchDB documents.                                                          \n* [CleverStack/clever-email](https://github.com/CleverStack/clever-email) - E-mail system for CleverStack.\n* [CloudTypes](https://github.com/ticup/CloudTypes) - JavaScript end2end implementation of the Cloud Types model for Eventual Consistency programming.\n* [dnode-tarantula](https://github.com/jutaz/dnode-tarantula) - an asynchronous rpc and event system for node.js based on dnode-protocol and TCP sockets.\n* [mongoose-url-shortener](https://www.npmjs.org/package/mongoose-url-shortener) - A simple URL Shortening library for NodeJS using Promises/A+ results.\n* [mozilla/smokejumper](https://github.com/mozilla/smokejumper) - The Smoke Jumper project is an effort to bring dead simple, secure, P2P file sharing to Firefox.\n* [shortness](https://npmjs.org/package/shortness) - Node based URL shortener that uses SQLite.\n* [file-db](https://npmjs.org/package/file-db) - Document database that uses directories and files to store its data, supporting nested key-value objects in named collections.\n* [resume-generator](https://www.npmjs.org/package/resume-generator) - Resume Generator.\n* [riffmint](https://npmjs.org/package/riffmint) - Collaboration in musical space.\n* [rap1ds/dippa](https://github.com/rap1ds/dippa) - Dippa Editor – A web-based LaTeX editor http://dippaeditor.com\n\n\n- - -\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011-2014 Dylan Greene <dylang@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dylang/shortid/issues"
  },
  "_id": "shortid@2.0.1",
  "_shasum": "550a157d53266ef0c31c187e048a7e5beb9d3f8e",
  "_from": "shortid@~2.0.1",
  "_resolved": "http://registry.npmjs.org/shortid/-/shortid-2.0.1.tgz"
}
