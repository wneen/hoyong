{"_id":"ltgt","_rev":"6-3856ad8553cff275e84b0969456acac7","name":"ltgt","description":"implement correct ranges for level-*","dist-tags":{"latest":"1.0.2"},"versions":{"1.0.0":{"name":"ltgt","description":"implement correct ranges for level-*","version":"1.0.0","homepage":"https://github.com/dominictarr/ltgt","repository":{"type":"git","url":"git://github.com/dominictarr/ltgt.git"},"dependencies":{},"devDependencies":{"tape":"~2.13.1"},"scripts":{"test":"node test.js"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","testling":{"files":"test.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"gitHead":"4efbdb35851f0cff59ac4567f9eda38e9aeac74f","bugs":{"url":"https://github.com/dominictarr/ltgt/issues"},"_id":"ltgt@1.0.0","_shasum":"725f9e9ae46ee4983acb616dc018eac617af3ad3","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"dist":{"shasum":"725f9e9ae46ee4983acb616dc018eac617af3ad3","tarball":"http://registry.npmjs.org/ltgt/-/ltgt-1.0.0.tgz"},"directories":{}},"1.0.1":{"name":"ltgt","description":"implement correct ranges for level-*","version":"1.0.1","homepage":"https://github.com/dominictarr/ltgt","repository":{"type":"git","url":"git://github.com/dominictarr/ltgt.git"},"dependencies":{},"devDependencies":{"tape":"~2.13.1"},"scripts":{"test":"node test.js"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","testling":{"files":"test.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"gitHead":"63e6996e7d846c93f6c9a7633869d56595062235","bugs":{"url":"https://github.com/dominictarr/ltgt/issues"},"_id":"ltgt@1.0.1","_shasum":"2f36242e742b3a8dc402dddcf8c16a4bacac361a","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"dist":{"shasum":"2f36242e742b3a8dc402dddcf8c16a4bacac361a","tarball":"http://registry.npmjs.org/ltgt/-/ltgt-1.0.1.tgz"},"directories":{}},"1.0.2":{"name":"ltgt","description":"implement correct ranges for level-*","version":"1.0.2","homepage":"https://github.com/dominictarr/ltgt","repository":{"type":"git","url":"git://github.com/dominictarr/ltgt.git"},"dependencies":{},"devDependencies":{"tape":"~2.13.1"},"scripts":{"test":"node test.js"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","testling":{"files":"test.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"gitHead":"29e8204585b43b1a23be08288699ae18f7c9b8e8","bugs":{"url":"https://github.com/dominictarr/ltgt/issues"},"_id":"ltgt@1.0.2","_shasum":"e6817eb29ad204fc0c9e96ef8b0fee98ef6b9aa3","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"dist":{"shasum":"e6817eb29ad204fc0c9e96ef8b0fee98ef6b9aa3","tarball":"http://registry.npmjs.org/ltgt/-/ltgt-1.0.2.tgz"},"directories":{}}},"readme":"# ltgt\n\nimplement correct ranges for level-*\n\n[![build status](https://secure.travis-ci.org/dominictarr/ltgt.png)](http://travis-ci.org/dominictarr/ltgt)\n[![testling badge](https://ci.testling.com/dominictarr/ltgt.png)](https://ci.testling.com/dominictarr/ltgt)\n\n# example\n\n\n``` js\nvar ltgt = require('ltgt')\n\nltgt.start(range) //the start of the range\nltgt.end(range)   //the end of the range\n\n//returns the lower/upper bound, whether it's inclusive or not.\nltgt.lowerBound(range)\nltgt.upperBound(range)\n\nltgt.lt(range)\nltgt.gt(range)\nltgt.lte(range)\nltgt.gte(range)\n\n//return wether this is a reversed order\n//(this is significant for start/end ranges\nltgt.reverse(range)\nvar filter = ltgt.filter(range)\n\nfilter(key) == true //if key contained in range.\n\nltgt.contains(range, key)\n\n```\n\n# ways to specify ranges\n\nthere have been a variety of ways to specify ranges in level-*.\nthis module supports them all.\n\n# gt/gte, lt/lte\n\nspecify a range between a lower bound (gt, gte) and an upper bound (lt, lte)\n\nif `gte` and `gt` is undefined, read from the start of the database,\nif `lte` and `lt` is undefined, read until the end of the database,\n\n\n# min, max\n\nlegacy level-sublevel style,\nsynonym for `gte`, `lte`.\n\n# start, end, reverse\n\nlegacy levelup style.\n\nThe range is from `start` -> `end`, `start` does not specify the lowest\nrecord, instead it specifies the first record to be read. However,\n`reverse` must also be passed correctly. This is way to specify a range is\nconfusing if you need to read in reverse,\nso it's strongly recommended to use `gt/gte,lt/lte`.\n\nIf `reverse` is `true`,\n`start` *must* be `undefined` or less than `end`,\nunless `end` is `undefined`.\n\nif `reverse` is `false`\n`end` *must* be `undefined` or greater than `start`,\nunless `start` is `undefined`.\n\nif start is undefined, read from the first record in the database\nif end is undefined read until the last record in the database.\n\n# api\n\n## ltgt.contains(range, key, compare)\n\nusing the provided compare method, return `true` if `key`\nis within `range`. compare defaults to `ltgt.compare`\n\n## ltgt.filter(range, compare)\n\nreturn a function that returns true if it's argument is within range.\ncan be passed to `Array.filter`\n\n``` js\n[1,2,3,4,5].filter(ltgt.filter({gt: 2, lte: 4})\n// => [3, 4]\n```\n\n## ltgt.lowerBound(range)\n\nreturn the lower bound of `range`.\nIncase the lower bound is specified with `gt`,\ncheck `ltgt.lowerBoundExclusive`\n\n## ltgt.upperBound(range)\n\nreturn the upperBound of `range`.\nIncase the upper bound is specified with `gt`,\ncheck `ltgt.upperBoundExclusive`\n\n## ltgt.lowerBoundExclusive(range)\n\nreturn true if upper bound is exclusive.\n\n## ltgt.upperBoundExclusive(range)\n\nreturn true if lower bound is exclusive.\n\n## License\n\nMIT\n","maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"time":{"modified":"2014-05-29T19:58:11.580Z","created":"2014-05-29T17:50:49.691Z","1.0.0":"2014-05-29T17:50:49.691Z","1.0.1":"2014-05-29T19:08:08.899Z","1.0.2":"2014-05-29T19:58:11.580Z"},"homepage":"https://github.com/dominictarr/ltgt","repository":{"type":"git","url":"git://github.com/dominictarr/ltgt.git"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"bugs":{"url":"https://github.com/dominictarr/ltgt/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"\"2S5YABDT51R7IRBSK9273BD9K\""}