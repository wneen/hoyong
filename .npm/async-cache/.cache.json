{"_id":"async-cache","_rev":"21-3dc53d23dce3986eb5faf656b93450fb","name":"async-cache","description":"Cache your async lookups and don't fetch the same thing more than necessary.","dist-tags":{"latest":"0.1.5"},"versions":{"0.0.1":{"name":"async-cache","version":"0.0.1","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.0.0"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"BSD","_id":"async-cache@0.0.1","dist":{"shasum":"995ed75b1146626125a3dd1efb486690ee61f6fe","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.0.1.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]},"0.0.2":{"name":"async-cache","version":"0.0.2","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.0.0"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"BSD","_id":"async-cache@0.0.2","dist":{"shasum":"26d1566be36116e4605ed99aa926860515a0e9b8","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.0.2.tgz"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]},"0.1.0":{"name":"async-cache","version":"0.1.0","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.1.0"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"BSD","_id":"async-cache@0.1.0","dist":{"shasum":"2f18aabae2c8f706b73e13cf5942f35606fb8218","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.1.0.tgz"},"_npmVersion":"1.1.63","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]},"0.1.1":{"name":"async-cache","version":"0.1.1","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.2"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"BSD","_id":"async-cache@0.1.1","dist":{"shasum":"09a6955a3be701dba03ad6fd7fc313e7dd80feb5","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.1.1.tgz"},"_from":".","_npmVersion":"1.2.1","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]},"0.1.2":{"name":"async-cache","version":"0.1.2","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.3"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"BSD","_id":"async-cache@0.1.2","dist":{"shasum":"9183b6ac3834ee3ca28bfdfb2029f33be779fe31","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.1.2.tgz"},"_from":".","_npmVersion":"1.2.17","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]},"0.1.3":{"name":"async-cache","version":"0.1.3","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.3"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"BSD","bugs":{"url":"https://github.com/isaacs/async-cache/issues"},"_id":"async-cache@0.1.3","dist":{"shasum":"f8b6e68114e5b4766e34dd17d3a381ca7bd930ff","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.1.3.tgz"},"_from":".","_npmVersion":"1.3.1","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]},"0.1.4":{"name":"async-cache","version":"0.1.4","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.3"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","bugs":{"url":"https://github.com/isaacs/async-cache/issues"},"homepage":"https://github.com/isaacs/async-cache","_id":"async-cache@0.1.4","dist":{"shasum":"6dce989cffbd4b80fac86b3aeb7b37a25ef14e44","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.1.4.tgz"},"_from":".","_npmVersion":"1.3.26","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]},"0.1.5":{"name":"async-cache","version":"0.1.5","description":"Cache your async lookups and don't fetch the same thing more than necessary.","main":"ac.js","directories":{"test":"test"},"dependencies":{"lru-cache":"~2.3"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"keywords":["async","cache","lru"],"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"license":"ISC","bugs":{"url":"https://github.com/isaacs/async-cache/issues"},"homepage":"https://github.com/isaacs/async-cache","_id":"async-cache@0.1.5","dist":{"shasum":"b7cd396d295aa8c52829bbe30ec33b62426006da","tarball":"http://registry.npmjs.org/async-cache/-/async-cache-0.1.5.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"isaacs","email":"i@izs.me"},"maintainers":[{"name":"isaacs","email":"i@izs.me"}]}},"readme":"# async-cache\n\nCache your async lookups and don't fetch the same thing more than\nnecessary.\n\n## Example\n\nLet's say you have to look up stat info from paths.  But you are ok\nwith only looking up the stat info once every 10 minutes (since it\ndoesn't change that often), and you want to limit your cache size to\n1000 objects, and never have two stat calls for the same file\nhappening at the same time (since that's silly and unnecessary).\n\nYou can do this:\n\n```javascript\nvar stats = new AsyncCache({\n  // options passed directly to the internal lru cache\n  max: 1000,\n  maxAge: 1000 * 60 * 10,\n  // method to load a thing if it's not in the cache.\n  // key must be unique in the context of this cache.\n  load: function (key, cb) {\n    // the key can be something like the path, or fd+path, or whatever.\n    // something that will be unique.\n    // this method will only be called if it's not already in cache, and will\n    // cache the result in the lru.\n    getTheStatFromTheKey(key, cb)\n  }\n})\n\n// then later..\nstats.get(fd + ':' + path, function (er, stat) {\n  // maybe loaded from cache, maybe just fetched\n})\n```\n\nExcept for the `load` method, all the options are passed unmolested to\nthe internal [lru-cache](http://npm.im/lru-cache).\n\n### Differences from [lru-cache](http://npm.im/lru-cache)\n\nSince values are fetched asynchronously, the `get` method takes a\ncallback, rather than returning the value synchronously.\n\nWhile there is a `set(k,v)` method to manually seed the cache,\ntypically you'll just call `get` and let the load function fetch the\nkey for you.\n\nKeys must uniquely identify a single object, and must contain all the\ninformation required to fetch an object, and must be strings.\n\n## Methods\n\n* `get(key, cb)` If the key is in the cache, then calls `cb(null,\n  cached)` on nextTick.  Otherwise, calls the `load` function that was\n  supplied in the options object.  If it doesn't return an error, then\n  cache the result.  Multiple `get` calls with the same key will only\n  ever have a single `load` call at the same time.\n\n* `set(key, val)` Seed the cache.  This doesn't have to be done, but\n  can be convenient if you know that something will be fetched soon.\n\n* `reset()` Drop all the items in the cache.\n","maintainers":[{"name":"isaacs","email":"i@izs.me"}],"time":{"modified":"2014-03-17T18:01:35.698Z","created":"2012-08-10T15:57:32.613Z","0.0.1":"2012-08-10T15:57:34.170Z","0.0.2":"2012-08-10T18:47:17.875Z","0.1.0":"2012-10-19T14:02:35.429Z","0.1.1":"2013-01-15T16:12:35.662Z","0.1.2":"2013-04-06T22:32:30.441Z","0.1.3":"2013-07-02T19:28:06.096Z","0.1.4":"2014-02-07T00:20:51.031Z","0.1.5":"2014-03-17T18:01:35.698Z"},"author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"repository":{"type":"git","url":"git://github.com/isaacs/async-cache"},"users":{"cybo42":true,"c1freitas":true,"kesla":true},"readmeFilename":"README.md","homepage":"https://github.com/isaacs/async-cache","keywords":["async","cache","lru"],"bugs":{"url":"https://github.com/isaacs/async-cache/issues"},"license":"ISC","_attachments":{},"_etag":"\"D023LJPN8JRNRMYKMAQN6RW0D\""}