{"_id":"subarg","_rev":"6-aaf98ac0f63e7c6fdb37e3e9e3567cd5","name":"subarg","description":"parse arguments with recursive contexts","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.0":{"name":"subarg","version":"0.0.0","description":"parse arguments with recursive contexts","main":"index.js","dependencies":{"minimist":"~0.0.7"},"devDependencies":{"tape":"~2.3.2"},"scripts":{"test":"tape test/*.js"},"repository":{"type":"git","url":"git://github.com/substack/subarg.git"},"homepage":"https://github.com/substack/subarg","keywords":["argument","option","parser","parsing","flags","command-line","cli","recursive","minimist"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/16","firefox/latest","firefox/nightly","chrome/22","chrome/latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest"]},"bugs":{"url":"https://github.com/substack/subarg/issues"},"_id":"subarg@0.0.0","dist":{"shasum":"192b57f55ff9c8ff3e0840894f26a9e0d1bdbadb","tarball":"http://registry.npmjs.org/subarg/-/subarg-0.0.0.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"directories":{}},"0.0.1":{"name":"subarg","version":"0.0.1","description":"parse arguments with recursive contexts","main":"index.js","dependencies":{"minimist":"~0.0.7"},"devDependencies":{"tape":"~2.3.2"},"scripts":{"test":"tape test/*.js"},"repository":{"type":"git","url":"git://github.com/substack/subarg.git"},"homepage":"https://github.com/substack/subarg","keywords":["argument","option","parser","parsing","flags","command-line","cli","recursive","minimist"],"author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"license":"MIT","testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/16","firefox/latest","firefox/nightly","chrome/22","chrome/latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest"]},"bugs":{"url":"https://github.com/substack/subarg/issues"},"_id":"subarg@0.0.1","dist":{"shasum":"3d56b07dacfbc45bbb63f7672b43b63e46368e3a","tarball":"http://registry.npmjs.org/subarg/-/subarg-0.0.1.tgz"},"_from":".","_npmVersion":"1.3.21","_npmUser":{"name":"substack","email":"mail@substack.net"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"directories":{}}},"readme":"# subarg\n\nparse arguments with recursive contexts using\n[minimist](https://npmjs.org/package/minimist)\n\n[![testling badge](https://ci.testling.com/substack/subarg.png)](https://ci.testling.com/substack/subarg)\n\n[![build status](https://secure.travis-ci.org/substack/subarg.png)](http://travis-ci.org/substack/subarg)\n\nThis module is useful if you need to pass arguments into a piece of code without\ncoordinating ahead of time with the main program, like with a plugin system.\n\n# example\n\n``` js\nvar subarg = require('subarg');\nvar argv = subarg(process.argv.slice(2));\nconsole.log(argv);\n```\n\nContexts are denoted with square brackets:\n\n```\n$ node example/show.js rawr --beep [ boop -a 3 ] -n4 --robots [ -x 8 -y 6 ]\n{ _: [ 'rawr' ],\n  beep: { _: [ 'boop' ], a: 3 },\n  n: 4,\n  robots: { _: [], x: 8, y: 6 } }\n```\n\n# methods\n\n``` js\nvar subarg = require('subarg')\n```\n\n## var argv = subarg(args, opts)\n\nParse the arguments array `args`, passing `opts` to\n[minimist](https://npmjs.org/package/minimist).\n\nAn opening `[` in the `args` array creates a new context and a `]` closes a\ncontext. Contexts may be nested.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install subarg\n```\n\n# license\n\nMIT\n","maintainers":[{"name":"substack","email":"mail@substack.net"}],"time":{"modified":"2014-02-09T05:55:27.819Z","created":"2014-02-09T04:38:50.234Z","0.0.0":"2014-02-09T04:38:50.234Z","0.0.1":"2014-02-09T05:55:27.819Z"},"readmeFilename":"readme.markdown","users":{"feross":true,"wenbing":true},"_attachments":{},"_etag":"\"A76F9EFV1N8FMEVUQLID36Z5H\""}