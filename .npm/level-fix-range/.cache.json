{"_id":"level-fix-range","_rev":"19-00b6fdb202441ea181c8fe9eda288c58","name":"level-fix-range","description":"make using levelup reverse ranges easy","dist-tags":{"latest":"2.0.0"},"versions":{"1.0.0":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.0.0","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{},"devDependencies":{"tape":"~0.3.2"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nwhen you pass one option this will work too:\n\n``` js\n//get 'm' or after\ndb.createReadStream({start: 'm'})\n//get 'm' or before\ndb.createReadStream({end: 'm', reverse: true})\n```\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## License\n\nMIT\n","readmeFilename":"README.md","_id":"level-fix-range@1.0.0","dist":{"shasum":"4f8622795d78c1491f6fbbcf75cf238d75707f70","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.0.0.tgz"},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"1.0.1":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.0.1","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{},"devDependencies":{"tape":"~0.3.2"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nwhen you pass one option, it won't change anything,\nsince `{start: X, end: null}` and `{start: null, end: 'X'}`\nare both valid. (meaning from `X` to the end of the db,\nfrom the start of the db to `X`, respectively.)\n\n``` js\n//get 'm' or after\ndb.createReadStream({start: 'm'})\n//get 'm' or before\ndb.createReadStream({end: 'm', reverse: true})\n```\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## License\n\nMIT\n","readmeFilename":"README.md","_id":"level-fix-range@1.0.1","dist":{"shasum":"87de325ba447dc86645f79a0b5340ef70ba0424b","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.0.1.tgz"},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"1.0.2":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.0.2","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{},"devDependencies":{"tape":"~0.3.2"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## Example\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nWhen you either `start` _OR_ `end`, and the order is `reversed: true`,\nit will also reverse the range,\nso that:\n\n``` js\n{start: X, end: null} //from X to end of database\n{start: null, end: X} //from start of database to X\n```\nand you will get the some data, whether you have reverse=true|false,\nbut only the order will change.\n\n## License\n\nMIT\n","readmeFilename":"README.md","_id":"level-fix-range@1.0.2","dist":{"shasum":"bf15b915ae36d8470c821e883ddf79cd16420828","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.0.2.tgz"},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"1.1.0":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.1.0","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{},"devDependencies":{"tape":"~0.3.2"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## Example\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nWhen you either `start` _OR_ `end`, and the order is `reversed: true`,\nit will also reverse the range,\nso that:\n\n``` js\n{start: X, end: null} //from X to end of database\n{start: null, end: X} //from start of database to X\n```\nand you will get the some data, whether you have reverse=true|false,\nbut only the order will change.\n\n## License\n\nMIT\n","readmeFilename":"README.md","_id":"level-fix-range@1.1.0","dist":{"shasum":"0bf6b05d93b19b9cf65785e74a7a921080a4b9ff","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.1.0.tgz"},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"1.1.1":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.1.1","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{},"devDependencies":{"tape":"~0.3.2"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## Example\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nWhen you either `start` _OR_ `end`, and the order is `reversed: true`,\nit will also reverse the range,\nso that:\n\n``` js\n{start: X, end: null} //from X to end of database\n{start: null, end: X} //from start of database to X\n```\nand you will get the some data, whether you have reverse=true|false,\nbut only the order will change.\n\n## License\n\nMIT\n","readmeFilename":"README.md","_id":"level-fix-range@1.1.1","dist":{"shasum":"63b197de280be64e5171b7abd9fd1874a6c47fe9","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.1.1.tgz"},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"1.1.2":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.1.2","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{},"devDependencies":{"tape":"~0.3.2"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## Example\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nWhen you either `start` _OR_ `end`, and the order is `reversed: true`,\nit will also reverse the range,\nso that:\n\n``` js\n{start: X, end: null} //from X to end of database\n{start: null, end: X} //from start of database to X\n```\nand you will get the some data, whether you have reverse=true|false,\nbut only the order will change.\n\n## License\n\nMIT\n","readmeFilename":"README.md","_id":"level-fix-range@1.1.2","dist":{"shasum":"3c1b4b9b5b24a4b1944cb466c8fc92b5fbadfce8","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.1.2.tgz"},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"1.1.3":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.1.3","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{"clone":"~0.1.9"},"devDependencies":{"tape":"~1.0.4"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## Example\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nWhen you either `start` _OR_ `end`, and the order is `reversed: true`,\nit will also reverse the range,\nso that:\n\n``` js\n{start: X, end: null} //from X to end of database\n{start: null, end: X} //from start of database to X\n```\nand you will get the some data, whether you have reverse=true|false,\nbut only the order will change.\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/dominictarr/level-fix-range/issues"},"_id":"level-fix-range@1.1.3","dist":{"shasum":"8bc8b4a711dfb4d2cbc121f6342be7edfcf88b35","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.1.3.tgz"},"_from":".","_npmVersion":"1.3.0","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"1.1.4":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"1.1.4","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{},"devDependencies":{"tape":"~1.0.4"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## Example\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nWhen you either `start` _OR_ `end`, and the order is `reversed: true`,\nit will also reverse the range,\nso that:\n\n``` js\n{start: X, end: null} //from X to end of database\n{start: null, end: X} //from start of database to X\n```\nand you will get the some data, whether you have reverse=true|false,\nbut only the order will change.\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/dominictarr/level-fix-range/issues"},"_id":"level-fix-range@1.1.4","dist":{"shasum":"36f71cdc9a4ed3db105113a5b3e1a75c65f5b098","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-1.1.4.tgz"},"_from":".","_npmVersion":"1.3.6","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"2.0.0":{"name":"level-fix-range","description":"make using levelup reverse ranges easy","version":"2.0.0","homepage":"https://github.com/dominictarr/level-fix-range","repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"dependencies":{"clone":"~0.1.9"},"devDependencies":{"tape":"~1.0.4"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"license":"MIT","stability":"stable","readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## Example\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nWhen you either `start` _OR_ `end`, and the order is `reversed: true`,\nit will also reverse the range,\nso that:\n\n``` js\n{start: X, end: null} //from X to end of database\n{start: null, end: X} //from start of database to X\n```\nand you will get the some data, whether you have reverse=true|false,\nbut only the order will change.\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/dominictarr/level-fix-range/issues"},"_id":"level-fix-range@2.0.0","dist":{"shasum":"c417d62159442151a19d9a2367868f1724c2d548","tarball":"http://registry.npmjs.org/level-fix-range/-/level-fix-range-2.0.0.tgz"},"_from":".","_npmVersion":"1.3.6","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}}},"readme":"# level-fix-range\n\nmake reverse ranges easier to use.\n\nWhen you use reverse ranges, you have to reverse the `start` and `end` also,\n\n``` js\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream({start: 'z', end: 'a', reverse: true})\n```\n\nthis is confusing and bug-ridden.\n\nlevel-fix-range fixes the options so they always make sense.\nif you want a range to reverse, just set reverse.\n\n``` js\nvar fix = require('level-fix-range')\ndb.createReadStream({start: 'a', end: 'z'})\ndb.createReadStream(fix({start: 'a', end: 'z', reverse: true}))\n```\n\nwhen you pass one option this will work too:\n\n``` js\n//get 'm' or after\ndb.createReadStream({start: 'm'})\n//get 'm' or before\ndb.createReadStream({end: 'm', reverse: true})\n```\n\n## Stability\n\nStable: Expect patches, possible features additions.\n\n## License\n\nMIT\n","maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"time":{"modified":"2013-07-29T14:07:08.072Z","created":"2013-03-26T12:40:40.349Z","1.0.0":"2013-03-26T12:41:02.474Z","1.0.1":"2013-03-26T17:05:31.991Z","1.0.2":"2013-03-26T17:27:06.890Z","1.1.0":"2013-04-03T16:16:50.985Z","1.1.1":"2013-04-04T10:37:41.117Z","1.1.2":"2013-04-05T09:50:36.806Z","1.1.3":"2013-07-26T11:05:37.983Z","1.1.4":"2013-07-29T14:06:29.855Z","2.0.0":"2013-07-29T14:07:08.072Z"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"repository":{"type":"git","url":"git://github.com/dominictarr/level-fix-range.git"},"_attachments":{},"_etag":"\"7PSPLDV2J62DJTRS2XQ4L1DP3\""}