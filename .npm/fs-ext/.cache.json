{"_id":"fs-ext","_rev":"18-d3cf7ee58193ebe61c6b171c48d340b1","name":"fs-ext","description":"Extensions to core 'fs' module.","dist-tags":{"latest":"0.3.2"},"versions":{"0.2.0":{"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.2.0","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"main":"fs-ext.js","engines":{"node":">= v0.4.0"},"dependencies":{},"licenses":[{"type":"MIT"}],"bugs":{"email":"helpme@gmail.com","url":"https://github.com/baudehlo/node-fs-ext/issues"},"scripts":{"install":"node-waf configure build"},"devDependencies":{},"_id":"fs-ext@0.2.0","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"c8bb26f98dac68dc08b7b574154f15f119bc1d76","bin":{"0.4-ares1.7.4-ev4.4-openssl0.9.8l-v83.1.8.10-darwin-10.7.0":{"shasum":"c5c03e118c3ce6dbb99bd24078a44122bedc5112","tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.2.0-0.4-ares1.7.4-ev4.4-openssl0.9.8l-v83.1.8.10-darwin-10.7.0.tgz"}},"tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.2.0.tgz"},"directories":{}},"0.2.1":{"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.2.1","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"main":"fs-ext.js","engines":{"node":">= v0.4.0"},"dependencies":{},"licenses":[{"type":"MIT"}],"bugs":{"email":"helpme@gmail.com","url":"https://github.com/baudehlo/node-fs-ext/issues"},"scripts":{"install":"node-waf configure build"},"devDependencies":{},"_id":"fs-ext@0.2.1","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"b87cff5abb565637e6663fe9ee3d3dcf346db95f","bin":{"0.4-ares1.7.4-ev4.4-openssl0.9.8l-v83.1.8.10-darwin-10.7.0":{"shasum":"a4442097c00879637caf1d72acdbdfadcaf0291b","tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.2.1-0.4-ares1.7.4-ev4.4-openssl0.9.8l-v83.1.8.10-darwin-10.7.0.tgz"}},"tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.2.1.tgz"},"directories":{}},"0.2.2":{"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.2.2","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"main":"fs-ext.js","engines":{"node":">= v0.4.0"},"dependencies":{},"licenses":[{"type":"MIT"}],"bugs":{"email":"helpme@gmail.com","url":"https://github.com/baudehlo/node-fs-ext/issues"},"scripts":{"install":"node-waf configure build"},"devDependencies":{},"_id":"fs-ext@0.2.2","_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"e0d1414aa4dc0bfee94a98e740502447848084d8","bin":{"0.4-ares1.7.4-ev4.4-openssl0.9.8l-v83.1.8.10-darwin-10.7.0":{"shasum":"572eb51a2ee6e9d66fec9a04aa6d70f4882f7027","tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.2.2-0.4-ares1.7.4-ev4.4-openssl0.9.8l-v83.1.8.10-darwin-10.7.0.tgz"}},"tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.2.2.tgz"},"directories":{}},"0.2.3":{"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.2.3","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"main":"fs-ext.js","engines":{"node":">= v0.4.0"},"dependencies":{},"licenses":[{"type":"MIT"}],"bugs":{"email":"helpme@gmail.com","url":"https://github.com/baudehlo/node-fs-ext/issues"},"scripts":{"install":"node-waf configure build","test":"./run_tests"},"_npmUser":{"name":"msergeant","email":"helpme@gmail.com"},"_id":"fs-ext@0.2.3","devDependencies":{},"_engineSupported":true,"_npmVersion":"1.0.102","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"b241f9ddf47feaa6c25057d59fbc22af20c14643","tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.2.3.tgz"},"maintainers":[{"name":"msergeant","email":"helpme@gmail.com"}],"directories":{}},"0.3.0":{"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.3.0","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"main":"fs-ext.js","engines":{"node":">= v0.8.0"},"dependencies":{},"licenses":[{"type":"MIT"}],"bugs":{"mail":"helpme@gmail.com","url":"https://github.com/baudehlo/node-fs-ext/issues"},"scripts":{"install":"node-gyp configure build","test":"./run_tests"},"readme":"fs-ext\n======\n\nExtras not included in Node's fs module.\n\nInstallation\n------------\n\nInstall via npm:\n\n    npm install fs-ext\n\nUsage\n-----\n\nfs-ext imports all of the methods from the core 'fs' module, so you don't\nneed two objects.\n\n    var fs = require('fs-ext');\n    var fd = fs.openSync('foo.txt', 'r');\n    fs.flock(fd, 'ex', function (err) {\n        if (err) {\n            return console.log(\"Couldn't lock file\");\n        }\n        // file is locked\n    })\n\nAPI\n---\n\n### fs.flock(fd, flags, [callback])\n\nAsynchronous flock(2). No arguments other than a possible error are passed to\nthe callback. Flags can be 'sh', 'ex', 'shnb', 'exnb', 'un' and correspond\nto the various LOCK_SH, LOCK_EX, LOCK_SH|LOCK_NB, etc.\n\n### fs.flockSync(fd, flags)\n\nSynchronous flock(2). Throws an exception on error.\n\n### fs.seek(fd, offset, whence, [callback])\n\nAsynchronous lseek(2).  \n\ncallback will be given two arguments (err, currFilePos).\n\nwhence can be 0 (SEEK_SET) to set the new position in bytes to offset, \n1 (SEEK_CUR) to set the new position to the current position plus offset \nbytes (can be negative), or 2 (SEEK_END) to set to the end of the file \nplus offset bytes (usually negative or zero to seek to the end of the file).\n\n### fs.seekSync(fd, offset, whence)\n\nSynchronous lseek(2). Throws an exception on error.  Returns current\nfile position.\n\n\n### fs.utime(path [, atime, mtime] [, callback])\n\nAsynchronous utime(2).\n\nArguments `atime` and `mtime` are in seconds as for the system call.  Note\nthat the number value of Date() is in milliseconds, so to use the 'now'\nvalue with `fs.utime()` you would have to divide by 1000 first, e.g. \nDate.now()/1000\n\nJust like for utime(2), the absence of the `atime` and `mtime` means 'now'.\n\n### fs.utimeSync(path [, atime, mtime])\n\nSynchronous version of utime().  Throws an exception on error.\n\n\n\n\n","readmeFilename":"README.md","_id":"fs-ext@0.3.0","dist":{"shasum":"98c52caf0afdffa8d6e0ffab7a8a2930ea5f00b5","tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.3.0.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"msergeant","email":"helpme@gmail.com"},"maintainers":[{"name":"msergeant","email":"helpme@gmail.com"}],"directories":{}},"0.3.1":{"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.3.1","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"main":"fs-ext.js","engines":{"node":">= v0.8.0"},"dependencies":{},"licenses":[{"type":"MIT"}],"bugs":{"mail":"helpme@gmail.com","url":"https://github.com/baudehlo/node-fs-ext/issues"},"scripts":{"install":"node-gyp configure build","test":"./run_tests"},"readme":"fs-ext\n======\n\nExtras not included in Node's fs module.\n\nInstallation\n------------\n\nInstall via npm:\n\n    npm install fs-ext\n\nUsage\n-----\n\nfs-ext imports all of the methods from the core 'fs' module, so you don't\nneed two objects.\n\n    var fs = require('fs-ext');\n    var fd = fs.openSync('foo.txt', 'r');\n    fs.flock(fd, 'ex', function (err) {\n        if (err) {\n            return console.log(\"Couldn't lock file\");\n        }\n        // file is locked\n    })\n\nAPI\n---\n\n### fs.flock(fd, flags, [callback])\n\nAsynchronous flock(2). No arguments other than a possible error are passed to\nthe callback. Flags can be 'sh', 'ex', 'shnb', 'exnb', 'un' and correspond\nto the various LOCK_SH, LOCK_EX, LOCK_SH|LOCK_NB, etc.\n\n### fs.flockSync(fd, flags)\n\nSynchronous flock(2). Throws an exception on error.\n\n### fs.seek(fd, offset, whence, [callback])\n\nAsynchronous lseek(2).  \n\ncallback will be given two arguments (err, currFilePos).\n\nwhence can be 0 (SEEK_SET) to set the new position in bytes to offset, \n1 (SEEK_CUR) to set the new position to the current position plus offset \nbytes (can be negative), or 2 (SEEK_END) to set to the end of the file \nplus offset bytes (usually negative or zero to seek to the end of the file).\n\n### fs.seekSync(fd, offset, whence)\n\nSynchronous lseek(2). Throws an exception on error.  Returns current\nfile position.\n\n\n### fs.utime(path [, atime, mtime] [, callback])\n\nAsynchronous utime(2).\n\nArguments `atime` and `mtime` are in seconds as for the system call.  Note\nthat the number value of Date() is in milliseconds, so to use the 'now'\nvalue with `fs.utime()` you would have to divide by 1000 first, e.g. \nDate.now()/1000\n\nJust like for utime(2), the absence of the `atime` and `mtime` means 'now'.\n\n### fs.utimeSync(path [, atime, mtime])\n\nSynchronous version of utime().  Throws an exception on error.\n\n\n\n\n","readmeFilename":"README.md","_id":"fs-ext@0.3.1","dist":{"shasum":"e4dc4458eabc78df614fa844a72823a71f6f18f9","tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.3.1.tgz"},"_from":".","_npmVersion":"1.2.14","_npmUser":{"name":"msergeant","email":"helpme@gmail.com"},"maintainers":[{"name":"msergeant","email":"helpme@gmail.com"}],"directories":{}},"0.3.2":{"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"name":"fs-ext","description":"Extensions to core 'fs' module.","keywords":["fs","filesystem","flock","seek"],"version":"0.3.2","homepage":"https://github.com/baudehlo/node-fs-ext/","repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"main":"fs-ext.js","engines":{"node":">= v0.8.0"},"dependencies":{},"licenses":[{"type":"MIT"}],"bugs":{"url":"https://github.com/baudehlo/node-fs-ext/issues"},"scripts":{"install":"node-gyp configure build","test":"./run_tests"},"readme":"fs-ext\n======\n\nExtras not included in Node's fs module.\n\nInstallation\n------------\n\nInstall via npm:\n\n    npm install fs-ext\n\nUsage\n-----\n\nfs-ext imports all of the methods from the core 'fs' module, so you don't\nneed two objects.\n\n    var fs = require('fs-ext');\n    var fd = fs.openSync('foo.txt', 'r');\n    fs.flock(fd, 'ex', function (err) {\n        if (err) {\n            return console.log(\"Couldn't lock file\");\n        }\n        // file is locked\n    })\n\nAPI\n---\n\n### fs.flock(fd, flags, [callback])\n\nAsynchronous flock(2). No arguments other than a possible error are passed to\nthe callback. Flags can be 'sh', 'ex', 'shnb', 'exnb', 'un' and correspond\nto the various LOCK_SH, LOCK_EX, LOCK_SH|LOCK_NB, etc.\n\n### fs.flockSync(fd, flags)\n\nSynchronous flock(2). Throws an exception on error.\n\n### fs.seek(fd, offset, whence, [callback])\n\nAsynchronous lseek(2).  \n\ncallback will be given two arguments (err, currFilePos).\n\nwhence can be 0 (SEEK_SET) to set the new position in bytes to offset, \n1 (SEEK_CUR) to set the new position to the current position plus offset \nbytes (can be negative), or 2 (SEEK_END) to set to the end of the file \nplus offset bytes (usually negative or zero to seek to the end of the file).\n\n### fs.seekSync(fd, offset, whence)\n\nSynchronous lseek(2). Throws an exception on error.  Returns current\nfile position.\n\n\n### fs.utime(path [, atime, mtime] [, callback])\n\nAsynchronous utime(2).\n\nArguments `atime` and `mtime` are in seconds as for the system call.  Note\nthat the number value of Date() is in milliseconds, so to use the 'now'\nvalue with `fs.utime()` you would have to divide by 1000 first, e.g. \nDate.now()/1000\n\nJust like for utime(2), the absence of the `atime` and `mtime` means 'now'.\n\n### fs.utimeSync(path [, atime, mtime])\n\nSynchronous version of utime().  Throws an exception on error.\n\n\n\n\n","readmeFilename":"README.md","_id":"fs-ext@0.3.2","dist":{"shasum":"7515988d792dbc62535fb061845843e9c859212e","tarball":"http://registry.npmjs.org/fs-ext/-/fs-ext-0.3.2.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"msergeant","email":"helpme@gmail.com"},"maintainers":[{"name":"msergeant","email":"helpme@gmail.com"}],"directories":{}}},"maintainers":[{"name":"msergeant","email":"helpme@gmail.com"}],"time":{"modified":"2013-08-22T13:51:25.969Z","created":"2011-06-10T20:40:55.687Z","0.2.0":"2011-06-10T20:40:55.982Z","0.2.1":"2011-06-10T21:39:12.245Z","0.2.2":"2011-06-10T21:39:54.703Z","0.2.3":"2011-11-09T21:25:42.670Z","0.3.0":"2013-03-22T17:16:55.543Z","0.3.1":"2013-03-25T13:58:36.891Z","0.3.2":"2013-08-22T13:51:25.969Z"},"author":{"name":"Matt Sergeant","email":"helpme@gmail.com","url":"http://baudehlo.wordpress.com/"},"repository":{"type":"git","url":"git://github.com/baudehlo/node-fs-ext.git"},"_attachments":{},"_etag":"\"8EKGMP7LTHJYI4WZXDFLPORQ9\""}